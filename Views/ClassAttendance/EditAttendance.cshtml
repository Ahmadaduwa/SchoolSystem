@model SchoolSystem.ViewModels.AttendanceViewModel

<div class="container mx-auto p-4 md:p-6 bg-white shadow-xl rounded-lg max-w-5xl">
    <h2 class="text-xl sm:text-2xl md:text-3xl font-semibold text-gray-800 mb-4 md:mb-8 text-center">
        แก้ไขการเช็คชื่อ - @Model.ClassName - @Model.CourseName - @Model.date.ToShortDateString()
    </h2>

    <form method="post" asp-action="EditAttendance" asp-controller="ClassAttendance" class="w-full">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="cmId" />
        <input type="hidden" name="date" value="@Model.date.ToString("yyyy-MM-dd")" />
        <input type="hidden" asp-for="ClassName" />
        <input type="hidden" asp-for="CourseName" />

        <div class="overflow-x-auto bg-gray-50 rounded-lg shadow-md mb-6">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-green-600 text-white">
                    <tr>
                        <th class="px-4 py-3 md:px-6 text-left text-base md:text-lg font-medium md:font-semibold tracking-wider">
                            ชื่อนักเรียน
                        </th>
                        <th class="px-4 py-3 md:px-6 text-left text-base md:text-lg font-medium md:font-semibold tracking-wider">
                            สถานะ
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @for (int i = 0; i < Model.Students.Count; i++)
                    {
                        <tr class="hover:bg-gray-50 transition-all">
                            <td class="px-4 py-3 md:px-6 md:py-4 whitespace-nowrap">
                                @Html.HiddenFor(m => m.Students[i].StudentId)
                                <input type="hidden" asp-for="Students[@i].StudentName" value="@Model.Students[i].StudentName" />
                                <span class="text-sm md:text-base font-medium text-gray-700">@Model.Students[i].StudentName</span>
                            </td>
                            <td class="px-4 py-3 md:px-6 md:py-4">
                                <div class="flex flex-wrap items-center gap-2 md:gap-4">
                                    <div class="flex items-center">
                                        <input asp-for="Students[i].Status"
                                               class="w-4 h-4 text-green-500 border-gray-300 focus:ring-green-400 cursor-pointer"
                                               type="radio"
                                               id="present_@i"
                                               value="present">
                                        <label for="present_@i" class="ml-2 text-sm md:text-base text-gray-700 cursor-pointer select-none">มา</label>
                                    </div>
                                    <div class="flex items-center">
                                        <input asp-for="Students[i].Status"
                                               class="w-4 h-4 text-red-500 border-gray-300 focus:ring-red-400 cursor-pointer"
                                               type="radio"
                                               id="absent_@i"
                                               value="absent">
                                        <label for="absent_@i" class="ml-2 text-sm md:text-base text-gray-700 cursor-pointer select-none">ขาด</label>
                                    </div>
                                    <div class="flex items-center">
                                        <input asp-for="Students[i].Status"
                                               class="w-4 h-4 text-yellow-500 border-gray-300 focus:ring-yellow-400 cursor-pointer"
                                               type="radio"
                                               id="late_@i"
                                               value="late">
                                        <label for="late_@i" class="ml-2 text-sm md:text-base text-gray-700 cursor-pointer select-none">สาย</label>
                                    </div>
                                    <div class="flex items-center">
                                        <input asp-for="Students[i].Status"
                                               class="w-4 h-4 text-blue-500 border-gray-300 focus:ring-blue-400 cursor-pointer"
                                               type="radio"
                                               id="excused_@i"
                                               value="excused">
                                        <label for="excused_@i" class="ml-2 text-sm md:text-base text-gray-700 cursor-pointer select-none">ลา</label>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="flex flex-col sm:flex-row gap-4 mt-6">
            <button type="submit"
                    class="flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 md:py-3 px-4 rounded-lg shadow-md transition-all focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50">
                บันทึกการแก้ไข
            </button>
            <button type="button"
                    onclick="selectAllPresent()"
                    class="flex-1 bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 md:py-3 px-4 rounded-lg shadow-md transition-all focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50">
                เลือกมาทั้งหมด
            </button>
            <a href="javascript:history.back()"
               class="flex-1 bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 md:py-3 px-4 rounded-lg shadow-md text-center transition-all focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50">
                ยกเลิก
            </a>
        </div>
    </form>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set initial status based on model data
        @for (int i = 0; i < Model.Students.Count; i++)
        {
            <text>
                            var status_@i = "@Model.Students[i].Status?.ToLower()";
                            if (status_@i) {
                                document.querySelector('input[id=' + status_@i + '_@i]')?.setAttribute('checked', 'checked');
                            }
            </text>
        }

            // Add indicator for scrollable table on mobile
            const tableContainer = document.querySelector('.overflow-x-auto');
            if (tableContainer.scrollWidth > tableContainer.clientWidth) {
                // Table is scrollable
                const indicator = document.createElement('div');
                indicator.className = 'text-center text-gray-500 text-sm py-2 md:hidden';
                indicator.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" /></svg> เลื่อนตารางซ้าย-ขวาได้';
                tableContainer.parentNode.insertBefore(indicator, tableContainer);
            }
        });

        // Function to select all students as present
        function selectAllPresent() {
            const studentCount = @Model.Students.Count;
            for (let i = 0; i < studentCount; i++) {
                document.getElementById(`present_${i}`).checked = true;
            }
        }

        // Add swipe detection for mobile devices
        document.addEventListener('DOMContentLoaded', function() {
            const table = document.querySelector('table');
            let touchStartX = 0;
            let touchEndX = 0;

            table.addEventListener('touchstart', e => {
                touchStartX = e.changedTouches[0].screenX;
            }, false);

            table.addEventListener('touchend', e => {
                touchEndX = e.changedTouches[0].screenX;
                handleSwipe();
            }, false);

            function handleSwipe() {
                if (Math.abs(touchEndX - touchStartX) > 50) {
                    table.classList.add('swiped');
                    setTimeout(() => {
                        table.classList.remove('swiped');
                    }, 500);
                }
            }
        });
    </script>
}

@section Css {
    <link href="./css/markedt.css"></link>
}