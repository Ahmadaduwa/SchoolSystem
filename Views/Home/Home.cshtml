@model List<SchoolSystem.Models.Alert.Notification>
@{
    ViewData["Title"] = "Home Page";
}

<div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-6">
        <h1 class="text-2xl sm:text-3xl font-bold text-gray-800">Your Notifications</h1>
        <p class="text-gray-600 mt-2">Stay updated with your latest alerts and messages</p>
    </div>

    @if (Model.Count == 0)
    {
        <div class="bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 rounded-md shadow-sm">
            <div class="flex items-center">
                <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <p class="font-medium">No notifications found.</p>
            </div>
        </div>
    }
    else
    {
        <!-- Mobile view (cards) -->
        <div class="md:hidden space-y-4">
            @foreach (var notification in Model)
            {
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
                    <div class="p-4">
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm text-gray-500">@notification.NotificationTime.ToString("dd/MM/yyyy HH:mm")</span>
                            <span class="@GetStatusClass(notification.Status) px-2 py-1 rounded-full text-white text-xs font-medium">
                                @notification.Status
                            </span>
                        </div>
                        <p class="text-gray-800">@notification.Message</p>
                    </div>
                </div>
            }
        </div>

        <!-- Desktop view (table) -->
        <div class="hidden md:block overflow-hidden rounded-lg shadow-sm border border-gray-200">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Time</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Message</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var notification in Model)
                    {
                        <tr class="hover:bg-gray-50 transition-colors duration-150">
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                @notification.NotificationTime.ToString("dd/MM/yyyy HH:mm")
                            </td>
                            <td class="px-6 py-4 text-sm text-gray-800">
                                @notification.Message
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="@GetStatusClass(notification.Status) px-2 py-1 rounded-full text-white text-xs font-medium">
                                    @notification.Status
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        // You can add JavaScript for interactivity here
        // For example, notification dismissal, filtering, etc.
    </script>
}

@functions {
    private string GetStatusClass(string? status)
    {
        return status?.ToLower() switch
        {
            "success" => "bg-green-500",
            "failed" => "bg-red-500",
            "pending" => "bg-yellow-500",
            "warning" => "bg-orange-500",
            "info" => "bg-blue-500",
            _ => "bg-gray-500" // default case
        };
    }
}